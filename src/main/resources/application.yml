server:
  tomcat:
    connection-timeout: 10s
  port: 8484
#  ssl:
#    key-store: classpath:hornsup-raspi-finance-keystore.p12
#    key-store-password: ${SSL_KEY_STORE_PASSWORD}
#    key-store-type: pkcs12
#    key-alias: hornsup
#    key-password: ${SSL_KEY_PASSWORD}
#    enabled: ${SSL_ENABLED}
#    enabled-protocols: TLSv1.2
spring:
  security:
    #    oauth2:
    #      resourceserver:
    #        jwt:
    #          issuer-uri: http://localhost:8443/auth/realms/finance
    #          jwk-set-uri: http://localhost:8443/auth/realms/finance/protocol/openid-connect/certs
    user:
      name: henninb
      password: monday1
  application:
    name: example
  profiles:
    active: prod

  # ===============================
  # = Jackson Settings
  # ===============================
  jackson:
    property-naming-strategy: LOWER_CAMEL_CASE
    default-property-inclusion: non_null
    mapper.accept-case-insensitive-enums: true
    time-zone: America/Chicago
  # ===============================
  # = DATA SOURCE
  # ===============================
  datasource:
    url: jdbc:postgresql://192.168.10.192:5432/finance_test_db
    #url: jdbc:postgresql://localhost:5432/finance_test_db
    username: henninb
    password: monday1
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: public
  sql:
    init:
      continue-on-error: false
      mode: never
  # ===============================
  # = JPA / HIBERNATE
  # ===============================
  # Show or not log for each sql query
  jpa:
    show-sql: true
    open-in-view: false
    generate-ddl: false
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  #    properties:
  #      hibernate:
  #        jdbc:
  #          time_zone: UTC

  # ===============================
  # = Flyway
  # ===============================
#  flyway:
#    enabled: ${FLYWAY_ENABLED}
#    user: ${DATASOURCE_USERNAME}
#    password: ${DATASOURCE_PASSWORD}
#    url: ${DATASOURCE}
#    baseline-on-migrate: true
#    baseline-version: 0
#    #    schemas: prod
#    locations: classpath:db/migration/prod
#    validate-on-migrate: true

# ===============================
# = Custom
# ===============================
custom:
  project:
    credit-accounts:
      - target_brian
    excluded-accounts:
      - test_brian

# ===============================
# = Logging
# ===============================
# logging:
#   config: classpath:logback-prod.groovy
#  logstash:
#    enabled: true
#    url: 192.168.99.100:5000

#spring.jpa.hibernate.ddl-auto: none
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#none is build from schema.sql (no Java classes)
#update only add new tables in the schema.sql (starting from Java classes)

#kebab-case '-' separated

# ===============================
# = Health and Metrics
# ===============================
management:
  endpoint:
    health:
      show-details: always
  metrics:
    distribution:
      percentiles:
        method.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
        query.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
  endpoints:
    web:
      exposure:
        include: "*"
#  influx:
#    metrics:
#      export:
#        auto-create-db: true
#        enabled: ${INFLUXDB_ENABLED}
#        db: metrics
#        compressed: false
#        uri: ${INFLUXDB_URL}
#        user-name: ${INFLUXDB_ADMIN_USERNAME}
#        password: ${INFLUXDB_ADMIN_PASSWORD}
debug: false